<?php
require_once 'config.php';

// Initialize variables
$name = $leave_type = $start_date = $end_date = "";
$errors = [];
$success_message = "";

// Process form submission
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    // Validate name
    if (empty($_POST["name"])) {
        $errors[] = "Name is required";
    } else {
        $name = test_input($_POST["name"]);
        
        // Split name into first and last name
        $name_parts = explode(' ', $name, 2);
        $first_name = $name_parts[0];
        $last_name = isset($name_parts[1]) ? $name_parts[1] : '';
        
        // Validate that we have both first and last name
        if (empty($last_name)) {
            $errors[] = "Please enter both first and last name";
        }
    }
    
    // Validate leave type
    if (empty($_POST["leave_type"])) {
        $errors[] = "Leave type is required";
    } else {
        $leave_type = test_input($_POST["leave_type"]);
        
        // Ensure leave type is either Sick Leave or Vacation Leave
        if ($leave_type != "Sick Leave" && $leave_type != "Vacation Leave") {
            $errors[] = "Invalid leave type selected";
        }
    }
    
    // Validate start date
    if (empty($_POST["start_date"])) {
        $errors[] = "Start date is required";
    } else {
        $start_date = test_input($_POST["start_date"]);
    }
    
    // Validate end date
    if (empty($_POST["end_date"])) {
        $errors[] = "End date is required";
    } else {
        $end_date = test_input($_POST["end_date"]);
        
        // Check if end date is after start date
        if (strtotime($end_date) < strtotime($start_date)) {
            $errors[] = "End date must be after start date";
        }
    }
    
    // Calculate number of days
    $number_of_days = 0;
    if (!empty($start_date) && !empty($end_date)) {
        $start = new DateTime($start_date);
        $end = new DateTime($end_date);
        
        // Calculate business days only (excluding weekends)
        $business_days = 0;
        $current = clone $start;
        while ($current <= $end) {
            $day_of_week = $current->format('N');
            if ($day_of_week < 6) { // 1 (Monday) to 5 (Friday)
                $business_days++;
            }
            $current->modify('+1 day');
        }
        $number_of_days = $business_days;
    }
    
    // If no errors, save to database
    if (empty($errors)) {
        // Check if employee exists
        try {
            $stmt = $pdo->prepare("SELECT leave_credits_id FROM employees WHERE name = :name");
            $stmt->execute([':name' => $name]);
            $employee = $stmt->fetch(PDO::FETCH_ASSOC);
            
            if (!$employee) {
                $errors[] = "Employee not found. Please check the name and try again.";
            }
        } catch(PDOException $e) {
            $errors[] = "Error checking employee: " . $e->getMessage();
        }
        
        // If employee exists, check leave credits
        if (!isset($errors[0]) && $employee) {
            try {
                $stmt = $pdo->prepare("
                    SELECT 
                        vacation_leave, sick_leave
                    FROM 
                        leave_credits 
                    WHERE 
                        id = :leave_credits_id
                ");
                $stmt->execute([':leave_credits_id' => $employee['leave_credits_id']]);
                $leave_credits = $stmt->fetch(PDO::FETCH_ASSOC);
                
                $has_enough_credits = false;
                
                // Check based on leave type
                if ($leave_type == 'Vacation Leave' && $leave_credits['vacation_leave'] >= $number_of_days) {
                    $has_enough_credits = true;
                } else if ($leave_type == 'Sick Leave' && $leave_credits['sick_leave'] >= $number_of_days) {
                    $has_enough_credits = true;
                }
                
                if (!$has_enough_credits) {
                    $errors[] = "Not enough leave credits for this request.";
                }
            } catch(PDOException $e) {
                $errors[] = "Error checking leave credits: " . $e->getMessage();
            }
            
            // If employee has enough credits, insert leave application
            if (!isset($errors[0]) && $has_enough_credits) {
                try {
                    // Insert leave application
                    $stmt = $pdo->prepare("
                        INSERT INTO leave_applications 
                        (first_name, last_name, leave_type, start_date, end_date, number_of_days, created_at) 
                        VALUES 
                        (:first_name, :last_name, :leave_type, :start_date, :end_date, :number_of_days, NOW())
                    ");
                    
                    $params = [
                        ':first_name' => $first_name,
                        ':last_name' => $last_name,
                        ':leave_type' => $leave_type,
                        ':start_date' => $start_date,
                        ':end_date' => $end_date,
                        ':number_of_days' => $number_of_days
                    ];
                    
                    // Debug: Print the SQL and parameters
                    // echo "SQL: INSERT INTO leave_applications (first_name, last_name, leave_type, start_date, end_date, number_of_days, created_at) VALUES (:first_name, :last_name, :leave_type, :start_date, :end_date, :number_of_days, NOW())";
                    // echo "<pre>Params: " . print_r($params, true) . "</pre>";
                    
                    $stmt->execute($params);
                } catch(PDOException $e) {
                    $errors[] = "Error inserting leave application: " . $e->getMessage();
                }
                
                // If leave application inserted, update leave credits
                if (!isset($errors[0])) {
                    try {
                        // Create the SQL statement based on leave type
                        if ($leave_type == 'Vacation Leave') {
                            $sql = "
                                UPDATE leave_credits 
                                SET 
                                    vacation_leave = vacation_leave - :days,
                                    total_leave_credits = total_leave_credits - :days
                                WHERE 
                                    id = :leave_credits_id
                            ";
                        } else { // Sick Leave
                            $sql = "
                                UPDATE leave_credits 
                                SET 
                                    sick_leave = sick_leave - :days,
                                    total_leave_credits = total_leave_credits - :days
                                WHERE 
                                    id = :leave_credits_id
                            ";
                        }
                        
                        $stmt = $pdo->prepare($sql);
                        
                        $update_params = [
                            ':days' => $number_of_days,
                            ':leave_credits_id' => $employee['leave_credits_id']
                        ];
                        
                        // Debug: Print the SQL and parameters
                        // echo "SQL: $sql";
                        // echo "<pre>Params: " . print_r($update_params, true) . "</pre>";
                        
                        $stmt->execute($update_params);
                        
                        $success_message = "Leave application submitted successfully!";
                        
                        // Reset form fields
                        $name = $leave_type = $start_date = $end_date = "";
                    } catch(PDOException $e) {
                        $errors[] = "Error updating leave credits: " . $e->getMessage();
                    }
                }
            }
        }
    }
}

// Function to sanitize input data
function test_input($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}

// Fetch all employees for autocomplete
try {
    $stmt = $pdo->prepare("SELECT name FROM employees ORDER BY name");
    $stmt->execute();
    $employees = $stmt->fetchAll(PDO::FETCH_COLUMN);
} catch(PDOException $e) {
    $errors[] = "Error fetching employees: " . $e->getMessage();
    $employees = [];
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Leave Application Form</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">
    <link rel="stylesheet" href="./leave_card.css">
    <style>
        .form-container {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);
            padding: 30px;
            margin-top: 20px;
        }
        .form-title {
            color: #3a3a3a;
            margin-bottom: 25px;
            border-bottom: 2px solid #f0f0f0;
            padding-bottom: 15px;
        }
        .days-display {
            font-weight: bold;
            margin-top: 10px;
            font-size: 16px;
            background-color: #f8f9fa;
            padding: 10px;
            border-radius: 5px;
            border-left: 4px solid #4e73df;
        }
        .employee-suggestion {
            position: absolute;
            z-index: 1000;
            background: white;
            width: 100%;
            max-height: 200px;
            overflow-y: auto;
            border: 1px solid #ced4da;
            border-radius: 0 0 0.25rem 0.25rem;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        .employee-suggestion div {
            padding: 8px 12px;
            cursor: pointer;
        }
        .employee-suggestion div:hover {
            background-color: #f8f9fa;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="header-content">
            <img src="logow.png" alt="DOH Logo" class="img-fluid" style="max-height: 80px;">
            <div class="org-info">
                <h3>REPUBLIC OF THE PHILIPPINES</h3>
                <h3>DEPARTMENT OF HEALTH</h3>
                <h3>ZAMBOANGA PENINSULA CENTER FOR HEALTH DEVELOPMENT</h3>
                <p>Upper Calarian, Zamboanga City 7000</p>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="d-flex justify-content-between align-items-center mb-4" style="margin-top: 20px;">
            <h2>LEAVE APPLICATION FORM</h2>
            <a href="leave_card.php" class="btn btn-secondary">
                <i class="bx bx-arrow-back"></i> Back to Leave Credits
            </a>
        </div>
        
        <?php if (!empty($errors)): ?>
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="bx bx-error-circle"></i>
                <ul class="mb-0">
                    <?php foreach ($errors as $error): ?>
                        <li><?php echo $error; ?></li>
                    <?php endforeach; ?>
                </ul>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        <?php endif; ?>
        
        <?php if (!empty($success_message)): ?>
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <i class="bx bx-check-circle"></i> <?php echo $success_message; ?>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        <?php endif; ?>
        
        <div class="form-container">
            <form method="post" action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"]); ?>">
                <div class="row mb-4">
                    <div class="col-md-12">
                        <div class="position-relative">
                            <label for="name" class="form-label">Employee Name <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="name" name="name" value="<?php echo $name; ?>" placeholder="Enter full name (First Last)" required autocomplete="off">
                            <div id="employeeSuggestions" class="employee-suggestion d-none"></div>
                            <div class="form-text">Enter the employee's full name (First and Last name)</div>
                        </div>
                    </div>
                </div>
                
                <div class="row mb-4">
                    <div class="col-md-12">
                        <label for="leave_type" class="form-label">Leave Type <span class="text-danger">*</span></label>
                        <select class="form-select" id="leave_type" name="leave_type" required>
                            <option value="" <?php echo empty($leave_type) ? 'selected' : ''; ?>>Select Leave Type</option>
                            <option value="Vacation Leave" <?php echo $leave_type == 'Vacation Leave' ? 'selected' : ''; ?>>Vacation Leave</option>
                            <option value="Sick Leave" <?php echo $leave_type == 'Sick Leave' ? 'selected' : ''; ?>>Sick Leave</option>
                        </select>
                    </div>
                </div>
                
                <div class="row mb-4">
                    <div class="col-md-6">
                        <label for="start_date" class="form-label">Start Date <span class="text-danger">*</span></label>
                        <input type="date" class="form-control" id="start_date" name="start_date" value="<?php echo $start_date; ?>" required>
                    </div>
                    <div class="col-md-6">
                        <label for="end_date" class="form-label">End Date <span class="text-danger">*</span></label>
                        <input type="date" class="form-control" id="end_date" name="end_date" value="<?php echo $end_date; ?>" required>
                    </div>
                </div>
                
                <div class="row mb-4">
                    <div class="col-md-12">
                        <div id="days_display" class="days-display">
                            <i class="bx bx-calendar"></i> Number of Working Days: <span id="num_days">0</span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-12">
                        <button type="submit" class="btn btn-primary btn-lg w-100">
                            <i class="bx bx-check-circle"></i> Submit Leave Application
                        </button>
                    </div>
                </div>
            </form>
        </div>
        
        <div class="card mt-4 mb-4">
            <div class="card-header bg-info text-white">
                <i class="bx bx-info-circle"></i> Leave Application Guidelines
            </div>
            <div class="card-body">
                <ul>
                    <li>Applications must be submitted at least 3 working days in advance for planned leaves.</li>
                    <li>Sick leave applications must be accompanied by a medical certificate if more than 3 consecutive days.</li>
                    <li>Leave credits are automatically deducted upon approval of the application.</li>
                    <li>Only Vacation Leave and Sick Leave are available for application.</li>
                    <li>The system automatically calculates working days (excluding weekends).</li>
                </ul>
            </div>
        </div>
    </div>
    
    <!-- Bootstrap JS and Popper.js -->
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>
    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script>
        // Employee name autocomplete
        const employees = <?php echo json_encode($employees); ?>;
        const nameInput = document.getElementById('name');
        const suggestionBox = document.getElementById('employeeSuggestions');
        
        nameInput.addEventListener('input', function() {
            const value = this.value.toLowerCase();
            suggestionBox.innerHTML = '';
            
            if (value.length < 2) {
                suggestionBox.classList.add('d-none');
                return;
            }
            
            const filteredEmployees = employees.filter(employee => 
                employee.toLowerCase().includes(value)
            );
            
            if (filteredEmployees.length > 0) {
                suggestionBox.classList.remove('d-none');
                filteredEmployees.forEach(employee => {
                    const div = document.createElement('div');
                    div.textContent = employee;
                    div.addEventListener('click', function() {
                        nameInput.value = employee;
                        suggestionBox.classList.add('d-none');
                    });
                    suggestionBox.appendChild(div);
                });
            } else {
                suggestionBox.classList.add('d-none');
            }
        });
        
        // Hide suggestions when clicking outside
        document.addEventListener('click', function(e) {
            if (e.target !== nameInput && e.target !== suggestionBox) {
                suggestionBox.classList.add('d-none');
            }
        });
        
        // Calculate number of days
        const startDateInput = document.getElementById('start_date');
        const endDateInput = document.getElementById('end_date');
        const daysDisplay = document.getElementById('num_days');
        
        function calculateBusinessDays() {
            const startDate = new Date(startDateInput.value);
            const endDate = new Date(endDateInput.value);
            
            if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {
                daysDisplay.textContent = '0';
                return;
            }
            
            if (endDate < startDate) {
                daysDisplay.textContent = '0';
                return;
            }
            
            // Calculate business days (excluding weekends)
            let businessDays = 0;
            const currentDate = new Date(startDate);
            
            while (currentDate <= endDate) {
                const dayOfWeek = currentDate.getDay();
                if (dayOfWeek !== 0 && dayOfWeek !== 6) {
                    businessDays++;
                }
                currentDate.setDate(currentDate.getDate() + 1);
            }
            
            daysDisplay.textContent = businessDays;
        }
        
        startDateInput.addEventListener('change', calculateBusinessDays);
        endDateInput.addEventListener('change', calculateBusinessDays);
        
        // Form validation
        document.querySelector('form').addEventListener('submit', function(e) {
            const name = nameInput.value.trim();
            const nameParts = name.split(' ');
            
            if (nameParts.length < 2) {
                e.preventDefault();
                Swal.fire({
                    icon: 'error',
                    title: 'Invalid Name Format',
                    text: 'Please enter both first and last name separated by a space.',
                });
            }
        });
    </script>
</body>
</html>
